
% stencil for LF: 2 HF:4// Restriction
% 1/16/16*[
% 1     4     6     4     1
% 4    16    24    16     4
% 6    24    36    24     6
% 4    16    24    16     4
% 1     4     6     4     1 ]

function fc = Restrict(r,bndcond)               % Restriction to coarser grid using
% full-weighted local averaging
if strcmp(bndcond,'Dirichlet')
    fc = r(1:2:end,1:2:end);
    fc(2:end-1,2:end-1) = 0.25*(fc(2:end-1,2:end-1) + ...
        0.5*(r(2:2:end-3,3:2:end-2) + r(4:2:end-1,3:2:end-2) + ...
        r(3:2:end-2,2:2:end-3) + r(3:2:end-2,4:2:end-1)) + ...
        0.25*(r(2:2:end-3,2:2:end-3) + r(2:2:end-3,4:2:end-1) + ...
        r(4:2:end-1,2:2:end-3) + r(4:2:end-1,4:2:end-1)));
    
    % alternative restrictions.
  
    
    
    
elseif strcmp(bndcond,'Periodic')
    fc = r(1:2:end-1,1:2:end-1);
    
    % restrict inner points
    fc(2:end,2:end) = 0.25*(fc(2:end,2:end)...
        +0.5*(r(2:2:end-2,3:2:end-1) + r(3:2:end-1,2:2:end-2)...
        + r(3:2:end-1,4:2:end) + r(4:2:end,3:2:end-1))...
        +0.25*(r(2:2:end-2,2:2:end-2) + r(2:2:end-2,4:2:end)...
        + r(4:2:end,2:2:end-2)  + r(4:2:end,4:2:end)));
    
    % restrict boundary points
    fc(1,:) = 0.25*(fc(1,:)...
        + 0.5*(r(end,1:2:end-1) + [r(1,end) r(1,2:2:end-2)] ...
        + r(1,2:2:end) + r(2,1:2:end-1))...
        + 0.25*([r(end,end) r(end,2:2:end-2)] + r(end,2:2:end)...
        + [r(2,end) r(2,2:2:end-2)] + r(2,2:2:end)));
    
    fc(2:end,1) = 0.25*(fc(2:end,1)...
        + 0.5*(r(2:2:end-2,1) + r(3:2:end-1,end)...
        + r(3:2:end-1,2) + r(4:2:end,1))...
        +0.25*(r(2:2:end-2,end) + r(2:2:end-2,2)...
        + r(4:2:end,end) + r(4:2:end,2)));
else
    error(['No such boundary condition - ' bndcond '\n'])
end

return

